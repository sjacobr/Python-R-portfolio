# SAS Results           
                                     PROC ORTHOREG used with Longley data          12:34 Wednesday, December 16, 2020   1

                                                       The ORTHOREG Procedure
 
                                                  Dependent Variable: Employed   

                                                              Sum of
                           Source                 DF         Squares     Mean Square    F Value    Pr > F

                           Model                   6     184172401.9     30695400.32     330.29    <.0001
                           Error                   9     836424.0555     92936.00617                     
                           Corrected Total        15     185008826.0                                     


                                                      Root MSE    304.85407356
                                                      R-Square    0.9954790046


                                                                          Standard
                           Variable       DF    Parameter Estimate           Error    t Value    Pr > |t|

                           Intercept       1        -3482258.63460     890420.3836      -3.91      0.0036
                           GNPdeflator     1       15.061872271373     84.91492577       0.18      0.8631
                           GNP             1       -0.035819179293    0.0334910078      -1.07      0.3127
                           Unemployed      1       -2.020229803817     0.488399682      -4.14      0.0025
                           ArmedForces     1       -1.033226867174     0.214274163      -4.82      0.0009
                           Population      1       -0.051104105654     0.226073200      -0.23      0.8262
                           Year            1     1829.151464613550     455.4784991       4.02      0.0030

# R Results
Call:
lm(formula = Employed ~ GNP.deflator + GNP + Unemployed + Armed.Forces + 
    Population + Year, data = longley)

Coefficients:
 (Intercept)  GNP.deflator           GNP    Unemployed  Armed.Forces  
  -3.482e+03     1.506e-02    -3.582e-02    -2.020e-02    -1.033e-02  
  Population          Year  
  -5.110e-02     1.829e+00  

# Python Results
      GNP.deflator      GNP  Unemployed  ...  Population    Year  Employed
1947          83.0  234.289       235.6  ...     107.608  1947.0    60.323
1948          88.5  259.426       232.5  ...     108.632  1948.0    61.122
1949          88.2  258.054       368.2  ...     109.773  1949.0    60.171
1950          89.5  284.599       335.1  ...     110.929  1950.0    61.187
1951          96.2  328.975       209.9  ...     112.075  1951.0    63.221
1952          98.1  346.999       193.2  ...     113.270  1952.0    63.639
1953          99.0  365.385       187.0  ...     115.094  1953.0    64.989
1954         100.0  363.112       357.8  ...     116.219  1954.0    63.761
1955         101.2  397.469       290.4  ...     117.388  1955.0    66.019
1956         104.6  419.180       282.2  ...     118.734  1956.0    67.857
1957         108.4  442.769       293.6  ...     120.445  1957.0    68.169
1958         110.8  444.546       468.1  ...     121.950  1958.0    66.513
1959         112.6  482.704       381.3  ...     123.366  1959.0    68.655
1960         114.2  502.601       393.1  ...     125.368  1960.0    69.564
1961         115.7  518.173       480.6  ...     127.852  1961.0    69.331
1962         116.9  554.894       400.7  ...     130.081  1962.0    70.551

[16 rows x 7 columns]
Intercept =  -3482.2586345958257
Coefficients =  [ 0.01506187 -0.03581918 -0.0202023  -0.01033227 -0.05110411  1.82915146]

#I got SAS help from this website: https://v8doc.sas.com/sashtml/stat/chap48/sect3.htm

# I got slightly different answers for SAS regarding my coefficients because the data was on a different scale than was 
# the data in R and Python. However, if you multiply each value by the necessary multiple of 10, you get the same results
# as in R and Python.

# R and Python did not have different default results, I know the instructions said that they might but for me they did not.
# Perhaps it is because sklearn is updated to be in sync with R, or because in my Python script I copied over the exact same
# data set as was in R. Either way, there was no discrepancy.

# For extra credit, my script created the following table of all three languages together:

			Each Variable in Each Language
  Variable name R coefficients SAS coefficients Python coefficients
0     Intercept     -3.482e+03   -3482258.63460          -3482.2586
1  GNP.deflator      1.506e-02         15.06187          0.01506187
2           GNP     -3.582e-02         -0.03581         -0.03581918
3    Unemployed     -2.020e-02       -2.0202298          -0.0202023
4  Armed.Forces     -1.033e-02        -1.033227         -0.01033227
5    Population     -5.110e-02          -0.0511          0.05110411
6          Year      1.829e+00       1829.15146             1.82915 
